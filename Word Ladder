'''Day 39 of #CrackYourInternship'''

class Solution:
    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:
        wordSet = set(wordList)

        if endWord not in wordSet:
            return 0

        beginSet = {beginWord}
        endSet = {endWord}
        distance = 1

        while beginSet and endSet:
            wordSet -= beginSet
            distance += 1
            newSet = set()

            for word in beginSet:
                for i in range(len(word)):
                    left = word[:i]
                    right = word[i + 1:]

                    for c in string.ascii_lowercase:
                        new_word = left + c + right

                        if new_word in wordSet:
                            if new_word in endSet:
                                return distance
                            newSet.add(new_word)

            if len(beginSet) > len(endSet): #swap to lowest set
                beginSet = endSet
                endSet = newSet
            else: beginSet = newSet

        return 0
