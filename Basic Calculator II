//Day 20 of #CrackYourInternship
class Solution {
    public int calculate(String s) {
        Stack<Integer> nums = new Stack<>();
        int num = 0;
        int n = s.length();
        char prevOp = '+';

        for (int i = 0; i < n; i++) {
            char curr = s.charAt(i);

            if (Character.isDigit(curr)) {
                num = num * 10 + (curr - '0');
            }

            if ((!Character.isDigit(curr) && curr != ' ') || i == n - 1) {
                if (prevOp == '+') {
                    nums.push(num);
                } else if (prevOp == '-') {
                    nums.push(-num);
                } else if (prevOp == '*') {
                    nums.push(nums.pop() * num);
                } else if (prevOp == '/') {
                    nums.push(nums.pop() / num);
                }

                prevOp = curr;
                num = 0;
            }
        }

        int result = 0;
        while (!nums.isEmpty()) {
            result += nums.pop();
        }

        return result;
    }
}
