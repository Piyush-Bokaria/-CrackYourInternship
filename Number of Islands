//Day 41 of #CrackYourInternship
class Solution {
    // Function to find the number of islands.
    int row;
    int col;
    private void dfs(char[][] grid, int i, int j){
        if(i < 0 || j < 0 || i == row || j == col || grid[i][j] != '1'){
            return;
        }
        grid[i][j] = '0';
        dfs(grid, i + 1, j);
        dfs(grid, i, j + 1);
        dfs(grid, i - 1, j);
        dfs(grid, i, j - 1);
        dfs(grid, i + 1, j + 1);
        dfs(grid, i - 1, j + 1);
        dfs(grid, i + 1, j - 1);
        dfs(grid, i - 1, j - 1);
    }
    public int numIslands(char[][] grid) {
        // Code here
        int m = grid.length;
        int n = grid[0].length;
        row = m;
        col = n;
        int count = 0;
        for(int i = 0;i < m;i++){
            for(int j = 0;j < n;j++){
                if(grid[i][j] == '1'){
                    dfs(grid, i, j);
                    count++;
                }
            }
        }
        return count;
    }
}F
