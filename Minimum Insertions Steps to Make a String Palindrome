//Day 39 of #CrackYourInternship
class Solution:
    def minInsertions(self, s: str) -> int:
        if s == s[::-1]:
            return 0
        return len(s) - self.longestPalindromeSubseq(s)
    def longestPalindromeSubseq(self, s: str) -> int:
        if len(s) < 1:
            return 0;
        size = len(s)
        dp = [1] * size
        for i in range(1, size):
            temp = 0
            for j in range(i - 1, -1, -1):
                t = dp[j]
                if s[i] == s[j]:
                    dp[j] = temp + 2
                temp = max(temp, t)
        res = 0
        for i in dp:
            res = max(res, i)
        return res    
