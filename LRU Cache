'''Day 42 of #CrackYourInternship'''
class LRUCache:

    def __init__(self, capacity: int):
        self.hash=OrderedDict()
        self.cap=capacity

    def get(self, key: int) -> int:
        if key in self.hash.keys():
            self.hash.move_to_end(key)
            return self.hash[key]
        else:
            return -1

    def put(self, key: int, value: int) -> None:
        if key in self.hash.keys():
           self.hash.move_to_end(key)
        else:
            if self.cap==len(self.hash):
                self.hash.popitem(last=False)
        self.hash[key]=value
           

# Your LRUCache object will be instantiated and called as such:
# obj = LRUCache(capacity)
# param_1 = obj.get(key)
# obj.put(key,value)
