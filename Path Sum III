//Day 43 of #CrackYourInternship
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    private int result = 0;

    private void dfs(TreeNode root, int target, int currSum) {
        if (root == null) {
            return;
        }

        currSum += (root.val % (1e9 + 7));

        if (currSum == target) {
            result++;
        }

        dfs(root.left, target, currSum);
        dfs(root.right, target, currSum);
    }

    public int pathSum(TreeNode root, int targetSum) {
        if (root == null) {
            return 0;
        }

        dfs(root, targetSum, 0);

        pathSum(root.left, targetSum);
        pathSum(root.right, targetSum);

        return result;
    }
}
