//Day 30 of #CrackYourInternship
class Solution {
    public int minRefuelStops(int target, int startFuel, int[][] stations) {
        int n = stations.length;
        PriorityQueue<int[]> pq = new  PriorityQueue<>((a, b) -> b[1]  - a[1]);
        
        int count = 0;
        int ind = 0;
        int dist = startFuel;
        while(dist < target){
            while(ind < n && dist >= stations[ind][0]){
                pq.offer(stations[ind]);
                ind++;
            }
            if(pq.isEmpty()){
                return -1;
            }
            dist += pq.remove()[1];
            count++;
        }
        return count;
    }
}
