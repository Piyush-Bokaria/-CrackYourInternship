//Day 22 of #CrackYourInternship
class Solution {
    public int binarysearch(List<Integer> curr, int ele){
        int index = -1;
        int low = 0;
        int high = curr.size() - 1;
        int mid = 0;
        while(low <= high){
            mid = (low + high) / 2;
            if(curr.get(mid) == ele){
                index = mid;
                high = mid - 1;
            }
            else if(curr.get(mid) > ele){
                high = mid - 1;
            }
            else{
                low = mid + 1;
            }
        }
        return index;
    }
    public List<Integer> countSmaller(int[] nums) {
        int n = nums.length;
        int[] result = new int[n];
        List<Integer> curr = Arrays.stream(nums).boxed().collect(Collectors.toList());
        Collections.sort(curr);
        for(int i = 0;i < n;i++){
            int index = binarysearch(curr, nums[i]);
            result[i] = index;
            curr.remove(index);
        }
        return Arrays.stream(result).boxed().collect(Collectors.toList());
    }
}
