//Day 16 of #CrackYourInternship
class Solution
{
    //Function to find the smallest window in the string s consisting
    //of all the characters of string p.
   public static String smallestWindow(String s, String p) {
        int minlen = Integer.MAX_VALUE;
        String minwin = "";
        int start = 0;
        int match = 0;
        Map<Character, Integer> pc = new HashMap<>();
        Map<Character, Integer> sc = new HashMap<>();


        for (char c : p.toCharArray()) {
            pc.put(c, pc.getOrDefault(c, 0) + 1);
        }

        for (int i = 0; i < s.length(); i++) {
            char currentChar = s.charAt(i);
            sc.put(currentChar, sc.getOrDefault(currentChar, 0) + 1);

            if (pc.containsKey(currentChar) && sc.get(currentChar).intValue() <= pc.get(currentChar).intValue()) {
                match++;
            }
            while (match == p.length()) {
                if (i - start + 1 < minlen) {
                    minlen = i - start + 1;
                    minwin = s.substring(start, i + 1);
                }

                char startChar = s.charAt(start);
                sc.put(startChar, sc.get(startChar) - 1);
                if (pc.containsKey(startChar) && sc.get(startChar).intValue() < pc.get(startChar).intValue()) {
                    match--;
                }
                start++;
            }
        }

        return minlen != Integer.MAX_VALUE ? minwin : "-1";
    }
